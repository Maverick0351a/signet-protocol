version: '3.8'

services:
  signet:
    build: .
    ports:
      - "8088:8088"
    environment:
      - SP_STORAGE=postgres
      - SP_POSTGRES_URL=postgresql://signet:signet_password@postgres:5432/signet
      - SP_API_KEYS={"demo_key":{"tenant":"demo","fallback_enabled":true,"fu_monthly_limit":10000}}
      - SP_HEL_ALLOWLIST=postman-echo.com,httpbin.org
      - SP_RESERVED_CONFIG=/app/reserved_production.json
  # Enable OpenTelemetry tracing export through the collector (HTTP/OTLP)
  - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/v1/traces
    depends_on:
      - postgres
  - otel-collector
    volumes:
      - ./reserved_production.json:/app/reserved_production.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=signet
      - POSTGRES_USER=signet
      - POSTGRES_PASSWORD=signet_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U signet"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped

  # OpenTelemetry Collector to receive spans from the Signet service and forward to backends.
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.100.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./monitoring/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4318:4318"   # OTLP HTTP
      - "4317:4317"   # OTLP gRPC (optional, not used by default)
    restart: unless-stopped

  # Optional Jaeger UI for viewing traces. Uncomment to enable.
  # jaeger:
  #   image: jaegertracing/all-in-one:1.57
  #   environment:
  #     - COLLECTOR_OTLP_ENABLED=true
  #   ports:
  #     - "16686:16686"   # Jaeger UI
  #   restart: unless-stopped


volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
