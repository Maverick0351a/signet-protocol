# Signet Protocol Splunk Configuration
# Index mapping and field extractions for Signet Protocol logs

[signet_protocol_index]
# Main index for Signet Protocol events
homePath = $SPLUNK_DB/signet_protocol/db
coldPath = $SPLUNK_DB/signet_protocol/colddb
thawedPath = $SPLUNK_DB/signet_protocol/thaweddb
maxDataSize = auto_high_volume
maxHotBuckets = 10
maxWarmDBCount = 300
maxTotalDataSizeMB = 500000

[signet_receipts_index]
# Dedicated index for receipt chain data
homePath = $SPLUNK_DB/signet_receipts/db
coldPath = $SPLUNK_DB/signet_receipts/colddb
thawedPath = $SPLUNK_DB/signet_receipts/thaweddb
maxDataSize = auto
maxHotBuckets = 5
maxWarmDBCount = 100
maxTotalDataSizeMB = 100000

# Field extractions for Signet Protocol logs
[signet_exchange_fields]
REGEX = trace_id="?([^"\s]+)"?\s+tenant="?([^"\s]+)"?\s+payload_type="?([^"\s]+)"?\s+target_type="?([^"\s]+)"?\s+success=(\w+)
FORMAT = trace_id::$1 tenant::$2 payload_type::$3 target_type::$4 success::$5

[signet_receipt_fields]
REGEX = receipt_hash="?([^"\s]+)"?\s+hop=(\d+)\s+cid="?([^"\s]+)"?
FORMAT = receipt_hash::$1 hop::$2 cid::$3

[signet_billing_fields]
REGEX = vex_usage=(\d+)\s+fu_usage=(\d+)\s+cost_usd=([\d.]+)
FORMAT = vex_usage::$1 fu_usage::$2 cost_usd::$3

[signet_policy_fields]
REGEX = policy_engine="?([^"\s]+)"?\s+allowed=(\w+)\s+reason="?([^"]*)"?
FORMAT = policy_engine::$1 policy_allowed::$2 policy_reason::$3

# Sourcetype definitions
[signet:exchange]
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)
TIME_PREFIX = timestamp=
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
MAX_TIMESTAMP_LOOKAHEAD = 32
TRUNCATE = 10000
KV_MODE = auto

[signet:receipt]
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)
TIME_PREFIX = ts=
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
MAX_TIMESTAMP_LOOKAHEAD = 32
TRUNCATE = 10000
KV_MODE = auto

[signet:billing]
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)
TIME_PREFIX = timestamp=
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
MAX_TIMESTAMP_LOOKAHEAD = 32
TRUNCATE = 10000
KV_MODE = auto

[signet:policy]
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)
TIME_PREFIX = timestamp=
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
MAX_TIMESTAMP_LOOKAHEAD = 32
TRUNCATE = 10000
KV_MODE = auto

# Data models for Signet Protocol
[signet_exchange_datamodel]
acceleration = true
acceleration.earliest_time = -7d@d
acceleration.max_time = 0

[signet_receipt_datamodel]
acceleration = true
acceleration.earliest_time = -30d@d
acceleration.max_time = 0

# Lookup tables
[signet_tenants_lookup]
filename = signet_tenants.csv
case_sensitive_match = false

[signet_payload_types_lookup]
filename = signet_payload_types.csv
case_sensitive_match = false

# Alert configurations
[signet_high_error_rate]
search = index=signet_protocol sourcetype=signet:exchange | stats count(eval(success="false")) as errors, count as total by _time span=5m | eval error_rate=round((errors/total)*100,2) | where error_rate > 5
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */5 * * * *
action.email = 1
action.email.to = alerts@example.com
action.email.subject = Signet Protocol High Error Rate Alert

[signet_quota_exceeded]
search = index=signet_protocol sourcetype=signet:billing | where vex_usage > 900 OR fu_usage > 450
dispatch.earliest_time = -1h
dispatch.latest_time = now
cron_schedule = 0 * * * *
action.email = 1
action.email.to = billing@example.com
action.email.subject = Signet Protocol Quota Alert

[signet_chain_integrity_failure]
search = index=signet_receipts sourcetype=signet:receipt | eval prev_hash_check=if(hop>1 AND isnull(prev_receipt_hash), "FAIL", "PASS") | where prev_hash_check="FAIL"
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */5 * * * *
action.email = 1
action.email.to = security@example.com
action.email.subject = Signet Protocol Chain Integrity Alert - URGENT

# Macros for common searches
[signet_exchange_by_tenant(1)]
definition = index=signet_protocol sourcetype=signet:exchange tenant="$tenant$"
args = tenant

[signet_receipt_chain(1)]
definition = index=signet_receipts sourcetype=signet:receipt trace_id="$trace_id$" | sort hop
args = trace_id

[signet_billing_summary(1)]
definition = index=signet_protocol sourcetype=signet:billing tenant="$tenant$" | stats latest(vex_usage) as vex_usage, latest(fu_usage) as fu_usage, latest(cost_usd) as cost_usd by tenant
args = tenant

[signet_policy_violations]
definition = index=signet_protocol sourcetype=signet:policy policy_allowed="false" | stats count by policy_reason, tenant | sort -count

# Dashboard panels
[signet_exchange_volume_panel]
search = index=signet_protocol sourcetype=signet:exchange | timechart span=1h count by tenant
earliest_time = -24h@h
latest_time = now

[signet_error_rate_panel]
search = index=signet_protocol sourcetype=signet:exchange | timechart span=15m count(eval(success="false")) as errors, count as total | eval error_rate=round((errors/total)*100,2)
earliest_time = -4h@h
latest_time = now

[signet_top_tenants_panel]
search = index=signet_protocol sourcetype=signet:exchange | stats count as exchanges by tenant | sort -exchanges | head 10
earliest_time = -24h@h
latest_time = now

[signet_chain_lengths_panel]
search = index=signet_receipts sourcetype=signet:receipt | stats max(hop) as chain_length by trace_id | stats count by chain_length | sort chain_length
earliest_time = -24h@h
latest_time = now

[signet_billing_usage_panel]
search = index=signet_protocol sourcetype=signet:billing | stats latest(vex_usage) as vex_usage, latest(fu_usage) as fu_usage by tenant | eval vex_pct=round((vex_usage/1000)*100,1), fu_pct=round((fu_usage/500)*100,1)
earliest_time = -1h@h
latest_time = now

# Correlation searches for incident detection
[signet_correlated_failures]
search = index=signet_protocol (sourcetype=signet:exchange success="false") OR (sourcetype=signet:policy policy_allowed="false") | transaction trace_id maxspan=5m | where eventcount > 1
earliest_time = -15m
latest_time = now
cron_schedule = */5 * * * *

[signet_anomalous_usage_patterns]
search = index=signet_protocol sourcetype=signet:exchange | bucket _time span=1h | stats count by _time, tenant | eventstats avg(count) as avg_count, stdev(count) as stdev_count by tenant | eval threshold=avg_count+(2*stdev_count) | where count > threshold
earliest_time = -24h@h
latest_time = now
cron_schedule = 0 * * * *

# Field aliases for easier searching
[signet_field_aliases]
FIELDALIAS-trace = trace_id AS trace
FIELDALIAS-user = tenant AS user
FIELDALIAS-status = success AS status
FIELDALIAS-latency = latency_ms AS response_time

# Tags for categorization
[signet_tags]
signet_exchange = eventtype=signet_exchange
signet_receipt = eventtype=signet_receipt
signet_billing = eventtype=signet_billing
signet_policy = eventtype=signet_policy
signet_error = success=false
signet_success = success=true
signet_high_usage = vex_usage>800 OR fu_usage>400

# Event types
[signet_exchange_eventtype]
search = sourcetype=signet:exchange

[signet_receipt_eventtype]
search = sourcetype=signet:receipt

[signet_billing_eventtype]
search = sourcetype=signet:billing

[signet_policy_eventtype]
search = sourcetype=signet:policy

[signet_error_eventtype]
search = success=false OR policy_allowed=false

# Workflow actions
[signet_investigate_trace]
label = Investigate Trace
search = | `signet_receipt_chain($trace_id$)`
type = link

[signet_tenant_summary]
label = Tenant Summary
search = | `signet_billing_summary($tenant$)`
type = link

[signet_policy_analysis]
label = Policy Analysis
search = | `signet_policy_violations`
type = link
