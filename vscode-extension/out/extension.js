"use strict";var S=Object.create;var v=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var A=(n,e)=>{for(var t in e)v(n,t,{get:e[t],enumerable:!0})},E=(n,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of P(e))!N.call(n,r)&&r!==t&&v(n,r,{get:()=>e[r],enumerable:!(i=M(e,r))||i.enumerable});return n};var l=(n,e,t)=>(t=n!=null?S(R(n)):{},E(e||!n||!n.__esModule?v(t,"default",{value:n,enumerable:!0}):t,n)),k=n=>E(v({},"__esModule",{value:!0}),n);var j={};A(j,{activate:()=>L,deactivate:()=>J});module.exports=k(j);var s=l(require("vscode"));var g=l(require("crypto")),D=l(require("vscode")),m=class{constructor(){let e=D.workspace.getConfiguration("signet-lens"),t=e.get("serverUrl")||"http://localhost:8088";this.apiKey=e.get("apiKey")||void 0,this.baseURL=t.replace(/\/$/,"")}authHeaders(){return this.apiKey?{"X-SIGNET-API-Key":this.apiKey}:{}}async getReceiptChain(e){try{let t=await this.fetchJson(`/v1/receipts/chain/${e}`);return Array.isArray(t)?t:null}catch{return null}}async exportChain(e){try{let t=await this.rawFetch(`/v1/receipts/export/${e}`),i=await t.json().catch(()=>null),r={};try{if(!(t.headers&&typeof t.headers.forEach=="function"?t.headers.forEach((d,I)=>{r[I.toLowerCase()]=d}):null)&&t.headers&&t.headers.entries)for(let[d,I]of t.headers.entries())r[String(d).toLowerCase()]=String(I)}catch{}let o=r["x-odin-response-cid"]||r["x-signet-response-cid"];return{...i,signature_headers:{bundle_cid:o,signature:r["x-odin-signature"]}}}catch{return null}}async verifyChain(e){if(!Array.isArray(e)||e.length===0)return{valid:!1,error:"Empty chain"};let t=null;for(let i of e){if(!i.receipt_hash)return{valid:!1,error:"Missing receipt_hash"};if(this.hashReceiptLike(i)!==i.receipt_hash)return{valid:!1,error:`Hash mismatch at hop ${i.hop}`};if(i.prev_receipt_hash!==(t||null)&&t!==null)return{valid:!1,error:`Broken prev hash link at hop ${i.hop}`};t=i.receipt_hash}return{valid:!0}}calculateCID(e){try{let t=JSON.parse(e),i=this.canonicalize(t);return g.createHash("sha256").update(i).digest("hex")}catch{return g.createHash("sha256").update(e).digest("hex")}}canonicalize(e){return e===null||typeof e!="object"?JSON.stringify(e):Array.isArray(e)?"["+e.map(i=>this.canonicalize(i)).join(",")+"]":"{"+Object.keys(e).sort().map(i=>JSON.stringify(i)+":"+this.canonicalize(e[i])).join(",")+"}"}hashReceiptLike(e){let t={...e};delete t.receipt_hash;let i=this.canonicalize(t);return g.createHash("sha256").update(i).digest("hex")}async fetchJson(e,t,i=1e4){let r=await this.rawFetch(e,t,i);if(!r.ok)throw new Error("HTTP "+r.status);return r.json()}async rawFetch(e,t,i=1e4){let r=new AbortController,o=setTimeout(()=>r.abort(),i);try{let a={...t?.headers||{},...this.authHeaders()},d=globalThis.fetch;if(!d)throw new Error("Global fetch not available in this Node version.");return await d(this.baseURL+e,{...t||{},headers:a,signal:r.signal})}finally{clearTimeout(o)}}};var h=l(require("vscode")),f=class{constructor(e){this.client=e;this._onDidChangeTreeData=new h.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.items=[]}refresh(){this._onDidChangeTreeData.fire()}addChain(e,t){let i=this.items.find(r=>r.traceId===e);i?i.chain=t:this.items.unshift({traceId:e,chain:t}),this.items.length>20&&this.items.pop(),this.refresh()}getTreeItem(e){return e}getChildren(e){return e?e.entry?Promise.resolve(e.entry.chain.map(t=>new w(`Hop ${t.hop} \u2013 ${t.receipt_hash?.slice(0,8)}`,h.TreeItemCollapsibleState.None))):Promise.resolve([]):Promise.resolve(this.items.map(t=>new w(`${t.traceId}`,h.TreeItemCollapsibleState.Collapsed,t)))}},w=class extends h.TreeItem{constructor(t,i,r){super(t,i);this.entry=r}};var b=l(require("vscode")),y=class{constructor(e,t){this.context=e;this.client=t}resolveWebviewView(e){e.webview.options={enableScripts:!0},e.webview.html=this.renderSkeleton()}async visualizeChain(e,t){(await this.ensurePanel()).webview.postMessage({type:"chain",traceId:e,chain:t})}async ensurePanel(){return this.panel?this.panel:(await b.commands.executeCommand("workbench.view.explorer"),await b.commands.executeCommand("signet-lens.chainVisualizer.focus"),await new Promise(e=>setTimeout(e,150)),this.panel)}renderSkeleton(){return`<!DOCTYPE html><html><head><meta charset='utf-8' />
    <style>
      body { font-family: sans-serif; padding: 8px; }
      .node { border:1px solid #555; padding:6px; margin:4px; border-radius:4px; }
      .hash { font-family: monospace; font-size: 11px; }
    </style></head><body>
    <h3>Receipt Chain</h3>
    <div id='meta'></div>
    <div id='chain'></div>
    <script>
      const vscode = acquireVsCodeApi();
      window.addEventListener('message', ev => {
        const { type, traceId, chain } = ev.data;
        if (type === 'chain') {
          document.getElementById('meta').textContent = 'Trace: ' + traceId + ' (' + chain.length + ' hops)';
          const c = document.getElementById('chain'); c.innerHTML='';
          chain.forEach(rec => {
            const d=document.createElement('div'); d.className='node';
            d.innerHTML = '<div><b>Hop ' + rec.hop + '</b></div>' +
                          '<div class="hash">' + rec.receipt_hash + '</div>' +
                          (rec.prev_receipt_hash?'<div class="hash prev">prev '+ rec.prev_receipt_hash.substring(0,16)+'\u2026</div>':'');
            c.appendChild(d);
          });
        }
      });
    </script></body></html>`}};var p=l(require("vscode")),C=class{constructor(e){this.client=e;this.decorationType=p.window.createTextEditorDecorationType({after:{color:new p.ThemeColor("editorCodeLens.foreground")}})}async updateDecorations(e){if(e.languageId==="json")try{let t=e.getText(),i=JSON.parse(t),r=[];if(Array.isArray(i)){let a=e.lineAt(0),d=await this.client.verifyChain(i);r.push({range:a.range,renderOptions:{after:{contentText:d.valid?" \u2705 verified chain ("+i.length+" hops)":" \u274C "+d.error}}})}else if(i.trace_id){let a=e.lineAt(0);r.push({range:a.range,renderOptions:{after:{contentText:" trace_id: "+i.trace_id}}})}let o=p.window.visibleTextEditors.find(a=>a.document===e);o&&o.setDecorations(this.decorationType,r)}catch{}}dispose(){this.decorationType.dispose()}};var c,u,T,x;function L(n){console.log("Signet Lens extension is now active!"),c=new m,u=new f(c),T=new y(n,c),x=new C(c),s.window.registerTreeDataProvider("signet-lens.receiptChains",u),s.window.registerWebviewViewProvider("signet-lens.chainVisualizer",T);let e=[s.commands.registerCommand("signet-lens.verifyReceipt",V),s.commands.registerCommand("signet-lens.visualizeChain",$),s.commands.registerCommand("signet-lens.copyBundleCID",z),s.commands.registerCommand("signet-lens.diffCID",O),s.commands.registerCommand("signet-lens.openSettings",H),s.commands.registerCommand("signet-lens.refreshChains",()=>u.refresh())],t=s.workspace.onDidChangeTextDocument(async r=>{s.workspace.getConfiguration("signet-lens").get("autoVerify")&&r.document.languageId==="json"&&await x.updateDecorations(r.document)}),i=s.window.onDidChangeActiveTextEditor(async r=>{r&&r.document.languageId==="json"&&s.workspace.getConfiguration("signet-lens").get("autoVerify")&&await x.updateDecorations(r.document)});n.subscriptions.push(...e,t,i,x),s.commands.executeCommand("setContext","signet-lens.hasReceiptChains",!0),s.window.showInformationMessage("Signet Lens is ready! Paste a receipt chain to verify and visualize.")}async function V(){let n=s.window.activeTextEditor;if(!n){s.window.showErrorMessage("No active editor found");return}try{let e=n.selection,t=e.isEmpty?n.document.getText():n.document.getText(e),i;try{i=JSON.parse(t)}catch{s.window.showErrorMessage("Invalid JSON format");return}if(Array.isArray(i)){let r=await c.verifyChain(i);_(r,i.length)}else if(i.receipt_hash||i.trace_id){let r=i.trace_id||F(i);if(r){let o=await c.getReceiptChain(r);if(o){let a=await c.verifyChain(o);_(a,o.length),u.addChain(r,o)}else s.window.showErrorMessage(`No chain found for trace ID: ${r}`)}else s.window.showErrorMessage("No trace ID found in receipt data")}else s.window.showErrorMessage("Selected text does not appear to be a Signet receipt or chain")}catch(e){s.window.showErrorMessage(`Verification failed: ${e}`)}}async function $(){let n=s.window.activeTextEditor;if(!n){s.window.showErrorMessage("No active editor found");return}try{let e=n.selection,t=e.isEmpty?n.document.getText():n.document.getText(e),i;try{i=JSON.parse(t)}catch{s.window.showErrorMessage("Invalid JSON format");return}let r,o;if(Array.isArray(i))r=i,o=r[0]?.trace_id||"unknown";else if(i.trace_id)o=i.trace_id,r=await c.getReceiptChain(o);else{s.window.showErrorMessage("No trace ID found in data");return}r&&r.length>0?(await T.visualizeChain(o,r),u.addChain(o,r)):s.window.showErrorMessage("No valid chain data found")}catch(e){s.window.showErrorMessage(`Visualization failed: ${e}`)}}async function z(){let n=s.window.activeTextEditor;if(!n){s.window.showErrorMessage("No active editor found");return}try{let e=n.selection,t=e.isEmpty?n.document.getText():n.document.getText(e),i;try{i=JSON.parse(t)}catch{s.window.showErrorMessage("Invalid JSON format");return}let r;if(i.trace_id)r=i.trace_id;else if(Array.isArray(i)&&i[0]?.trace_id)r=i[0].trace_id;else{s.window.showErrorMessage("No trace ID found in data");return}let o=await c.exportChain(r);if(o&&o.signature_headers?.bundle_cid){let a=o.signature_headers.bundle_cid;await s.env.clipboard.writeText(a),s.window.showInformationMessage(`Bundle CID copied to clipboard: ${a}`)}else s.window.showErrorMessage("Could not retrieve bundle CID")}catch(e){s.window.showErrorMessage(`Failed to copy bundle CID: ${e}`)}}async function O(){let n=await s.window.showInputBox({prompt:"Enter CID to compare with current selection",placeHolder:"bafkreiabc123..."});if(!n)return;let e=s.window.activeTextEditor;if(!e){s.window.showErrorMessage("No active editor found");return}try{let t=e.selection,i=t.isEmpty?e.document.getText():e.document.getText(t),r=await c.calculateCID(i);r===n?s.window.showInformationMessage("\u2705 CIDs match! Content is identical."):s.window.showWarningMessage(`\u274C CIDs differ:
Current: ${r}
Provided: ${n}`)}catch(t){s.window.showErrorMessage(`CID comparison failed: ${t}`)}}function H(){s.commands.executeCommand("workbench.action.openSettings","signet-lens")}function _(n,e){n.valid?s.window.showInformationMessage(`\u2705 Receipt chain verified! ${e} hops, integrity confirmed.`):s.window.showErrorMessage(`\u274C Receipt chain verification failed: ${n.error||"Unknown error"}`)}function F(n){return n.trace_id||n.traceId||n.id||n.receipt?.trace_id||null}function J(){}0&&(module.exports={activate,deactivate});
